/* Written by Carrie - 25th June 2018 */ 
/* REWRITTEN BY ADAM -17TH JANUARY 2019 FOR NEW SACT VIEWS FROM APRIL 2018*/

/* This creates an outcome level SAS extract for all regimens since APRIL 2018 - needs updating monthly */

/* This is a two step process */
/* Part one extracts all the data from the SACT tables and stores it in a new table - see the 'into' clause */
/* Part two adds an 'exclusion' field as it pulls the data from SQL server to a .rpt file */



/* **************************************** Part one **************************************** */

/* Before running this, set the dates in the 'where' clauses to inlcude the latest month available in SACT */
/*              and set the date in the outcome expected cases to 3 months before the latest SACT data               */

WITH SAS_SACT_OUTCOMES AS

(
 SELECT DISTINCT
	P.ENCORE_PATIENT_ID,
    P.NHS_NUMBER,
	NVL (P.GENDER_CURRENT, '') AS GENDER_CURRENT,
	NVL (P.ETHNICITY, '') AS ETHNICITY,
	NVL(
     (CASE WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 0 AND 15 THEN '0-15'
       WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 16 AND 18 THEN '16-18' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 19 AND 24 THEN '19-24'			
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 25 AND 29 THEN '25-29'			 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 30 AND 34 THEN '30-34' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 35 AND 39 THEN '35-39' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 40 AND 44 THEN '40-44' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 45 AND 49 THEN '45-49' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 50 AND 54 THEN '50-54' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 55 AND 59 THEN '55-59' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 60 AND 64 THEN '60-64' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 65 AND 69 THEN '65-69' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 70 AND 74 THEN '70-74' 
	   WHEN TRUNC((MONTHS_BETWEEN(R.START_DATE_OF_REGIMEN,P.DATE_OF_BIRTH))/12) BETWEEN 75 AND 79 THEN '75-79' 
	   ELSE '80+' END),'') AS AGEGROUP,
	NVL(T.SACT_TUMOUR_ID, '') AS SACT_TUMOUR_ID,
	NVL(T.PRIMARY_DIAGNOSIS, '') AS PRIMARY_DIAGNOSIS,
    NVL(DSG.GROUP_DESCRIPTION2, '') as GROUP_DESCRIPTION2,
	NVL(UPPER(T.ORGANISATION_CODE_OF_PROVIDER), '') AS PROVIDER, 
	NVL(UPPER(SUBSTR(T.ORGANISATION_CODE_OF_PROVIDER,1,3)), '') AS TRUST, 
	NVL(R.MERGED_REGIMEN_ID, '') AS MERGED_REGIMEN_ID,
    NVL(r.START_DATE_OF_REGIMEN, '') as START_DATE_OF_REGIMEN,
    NVL(R.INTENT_OF_TREATMENT, '') AS INTENT_OF_TREATMENT,
	NVL(R.PERF_STAT_START_OF_REG_ADULT, '') AS PERF_STAT_START_OF_REGIMEN,
	 NVL((R.WEIGHT_AT_START_OF_REGIMEN),'') AS WEIGHT_AT_START_OF_REGIMEN, 
	(CASE WHEN R.WEIGHT_AT_START_OF_REGIMEN > 0.0 THEN 'Y' ELSE '' END) AS WEIGHT_REGIMEN_COMPLETENESS,
	NVL((R.HEIGHT_AT_START_OF_REGIMEN),'') AS HEIGHT_AT_START_OF_REGIMEN, 
	(CASE WHEN R.HEIGHT_AT_START_OF_REGIMEN > 0.0 THEN 'Y' ELSE '' END) AS HEIGHT_REGIMEN_COMPLETENESS,
	NVL(R.MAPPED_REGIMEN, '') AS MAPPED_REGIMEN,
	NVL(C.MERGED_CYCLE_ID, '') AS MERGED_CYCLE_ID,
   NVL(C.START_DATE_OF_CYCLE, '') AS START_DATE_OF_CYCLE,
	NVL(C.WEIGHT_AT_START_OF_CYCLE,'') AS WEIGHT_AT_START_OF_CYCLE,
	(CASE WHEN C.WEIGHT_AT_START_OF_CYCLE > 0.0 THEN 'Y' ELSE '' END) AS WEIGHT_CYCLE_COMPLETENESS,
	NVL(C.PERF_STAT_START_OF_CYCLE_ADULT,'') AS PERF_STAT_START_OF_CYCLE,
    NVL(R.MERGED_REGIMEN_ID, '') AS MERGED_OUTCOME_ID,
	NVL(O.REGIMEN_OUTCOME_SUMMARY, '') AS REGIMEN_OUTCOME_SUMMARY,
   NVL(TO_CHAR(D.ADMINISTRATION_DATE,'MON/YYYY'), '') AS ADMINISTRATION_DATE,
    NVL(D.DRUG_NAME,'') AS DRUG_NAME,
	NVL (P.DATE_OF_DEATH, '') AS DATE_OF_DEATH
	,CASE
		WHEN P.DATE_OF_DEATH IS NOT NULL THEN '1'
     WHEN (CASE WHEN LDD.LATEST_CYCLE >= LDD.LATEST_ADMIN_DATE AND LDD.LATEST_CYCLE >= R.START_DATE_OF_REGIMEN THEN LDD.LATEST_CYCLE
                 WHEN LDD.LATEST_ADMIN_DATE >= LDD.LATEST_CYCLE AND LDD.LATEST_ADMIN_DATE >= R.START_DATE_OF_REGIMEN THEN LDD.LATEST_ADMIN_DATE
                 WHEN R.START_DATE_OF_REGIMEN >= LDD.LATEST_CYCLE AND R.START_DATE_OF_REGIMEN >= LDD.LATEST_ADMIN_DATE THEN R.START_DATE_OF_REGIMEN
                 ELSE NULL 
                 END) < TO_DATE('01-09-2018','DD-MM-YYYY') THEN '2' --change date on new extraction to 3 months before most recent sact data
		WHEN O.REGIMEN_OUTCOME_SUMMARY IS NOT NULL THEN '3'
		ELSE NULL
	END AS OUTCOME_EXPECTED						

FROM 

SACT.AT_PATIENT P
 INNER JOIN SACT.AT_TUMOUR T ON T.ENCORE_PATIENT_ID = P.ENCORE_PATIENT_ID
    INNER JOIN SACT.AT_REGIMEN R ON R.SACT_TUMOUR_ID = T.SACT_TUMOUR_ID
    INNER JOIN SACT.AT_CYCLE C ON C.MERGED_REGIMEN_ID = R.MERGED_REGIMEN_ID
   LEFT JOIN SACT.AT_DRUG_DETAIL D ON D.MERGED_CYCLE_ID = C.MERGED_CYCLE_ID
    LEFT JOIN SACT.AT_OUTCOME O ON O.MERGED_REGIMEN_ID = R.MERGED_REGIMEN_ID
    LEFT JOIN CIU_DIAGNOSIS_SUBGROUP DSG on DSG.ICD_Code = T.Primary_Diagnosis
 LEFT JOIN (SELECT C1.MERGED_REGIMEN_ID
					,MAX (C1.START_DATE_OF_CYCLE) OVER (PARTITION BY C1.MERGED_REGIMEN_ID) AS LATEST_CYCLE
					,MAX (D1.ADMINISTRATION_DATE) OVER (PARTITION BY C1.MERGED_REGIMEN_ID) AS LATEST_ADMIN_DATE
				FROM SACT.AT_DRUG_DETAIL D1 
					LEFT JOIN SACT.AT_CYCLE C1 ON C1.MERGED_CYCLE_ID = D1.MERGED_CYCLE_ID) LDD ON LDD.MERGED_REGIMEN_ID = R.MERGED_REGIMEN_ID

/* Change these dates when creating a new monthly update */

WHERE 
(R.START_DATE_OF_REGIMEN BETWEEN '01-APR-18' AND '30-NOV-18'
	OR 
C.START_DATE_OF_CYCLE BETWEEN '01-APR-18' AND '30-NOV-18')
	AND
	CASE
		WHEN P.DATE_OF_DEATH IS NOT NULL THEN '1'
		    WHEN (CASE WHEN LDD.LATEST_CYCLE >= LDD.LATEST_ADMIN_DATE AND LDD.LATEST_CYCLE >= R.START_DATE_OF_REGIMEN THEN LDD.LATEST_CYCLE
                 WHEN LDD.LATEST_ADMIN_DATE >= LDD.LATEST_CYCLE AND LDD.LATEST_ADMIN_DATE >= R.START_DATE_OF_REGIMEN THEN LDD.LATEST_ADMIN_DATE
                 WHEN R.START_DATE_OF_REGIMEN >= LDD.LATEST_CYCLE AND R.START_DATE_OF_REGIMEN >= LDD.LATEST_ADMIN_DATE THEN R.START_DATE_OF_REGIMEN
                 ELSE NULL 
                 END) < TO_DATE('01-09-2018','DD-MM-YYYY') THEN '2' -- DATE TO BE CHANGED ON UPDATES
    	WHEN O.REGIMEN_OUTCOME_SUMMARY IS NOT NULL THEN '3' 
		ELSE NULL
	END IS NOT NULL		/* Regimens with an outcome expected only */


)

/* **************************************** End of part one **************************************** */ 




/* **************************************** Part two **************************************** */
/***********************************--EXCLUSIONS FLAG CREATED--********************************/


SELECT 
 
	SSO.ENCORE_PATIENT_ID AS MERGED_PATIENT_ID
    ,SSO.GENDER_CURRENT
    ,SSO.ETHNICITY
    ,SSO.AGEGROUP
    ,SSO.SACT_TUMOUR_ID as MERGED_TUMOUR_ID
    ,SSO.PRIMARY_DIAGNOSIS
    ,SSO.Group_Description2
    ,SSO.PROVIDER
    ,SSO.TRUST
    ,SSO.MERGED_REGIMEN_ID
   ,TO_CHAR(SSO.START_DATE_OF_REGIMEN,'MON/YYYY') as START_DATE_OF_REGIMEN
    ,SSO.INTENT_OF_TREATMENT
    ,SSO.PERF_STAT_START_OF_REGIMEN
    ,SSO.WEIGHT_AT_START_OF_REGIMEN 
    ,SSO.WEIGHT_REGIMEN_COMPLETENESS
    ,SSO.HEIGHT_AT_START_OF_REGIMEN
    ,SSO.HEIGHT_REGIMEN_COMPLETENESS
    ,SSO.MAPPED_REGIMEN
    ,SSO.MERGED_CYCLE_ID
    ,TO_CHAR(SSO.START_DATE_OF_CYCLE,'MON/YYYY') AS START_DATE_OF_CYCLE
    ,SSO.WEIGHT_AT_START_OF_CYCLE
    ,SSO.WEIGHT_CYCLE_COMPLETENESS
    ,SSO.PERF_STAT_START_OF_CYCLE
    ,SSO.MERGED_OUTCOME_ID
    ,SSO.REGIMEN_OUTCOME_SUMMARY
   ,SSO.ADMINISTRATION_DATE
  
  
    
--EXCLUSION FLAGS
	,CASE WHEN (UPPER(SSO.MAPPED_REGIMEN) = 'NOT CHEMO' OR UPPER(BAL.BENCHMARK) = 'NOT CHEMO') THEN 'E1'
       WHEN (UPPER(SSO.MAPPED_REGIMEN) IN ('PAMIDRONATE','ZOLEDRONIC ACID') OR UPPER(BAL.BENCHMARK) IN ('PAMIDRONATE','ZOLEDRONIC ACID')) THEN 'E2'
	   WHEN (UPPER(SSO.MAPPED_REGIMEN) = 'DENOSUMAB' OR UPPER(BAL.BENCHMARK) = 'DENOSUMAB') THEN 'E3'	
       WHEN (UPPER(SSO.MAPPED_REGIMEN) = 'HORMONES' OR UPPER(BAL.BENCHMARK) = 'HORMONES') THEN 'E4'
       WHEN (UPPER(SSO.MAPPED_REGIMEN) IN ('BCG INTRAVESICAL','MITOMYCIN INTRAVESICAL','EPIRUBICIN INTRAVESICAL'))
		OR (UPPER(SSO.MAPPED_REGIMEN) IN ('MITOMYCIN','EPIRUBICIN') AND (SSO.PRIMARY_DIAGNOSIS LIKE 'C67%' OR SSO.PRIMARY_DIAGNOSIS LIKE 'D41%')) THEN 'E5'														
	   WHEN (UPPER(SSO.MAPPED_REGIMEN) LIKE '%TRIAL%' OR UPPER(BAL.BENCHMARK) LIKE '%TRIAL%') THEN 'E6'
       WHEN (UPPER(SSO.MAPPED_REGIMEN) IN ('NOT MATCHED') OR UPPER(BAL.BENCHMARK) IN ('NOT MATCHED')) THEN 'E7'
     --CDF EXCLUSION 
             WHEN (CASE WHEN (((UPPER(CDF.INTERVENTION) LIKE '%OSIMERTINIB%' AND CDF.APPROVALDATE >= DATE '2016-10-04' AND SSO.START_DATE_OF_CYCLE >= DATE '2016-10-04')
               OR (UPPER(CDF.INTERVENTION) LIKE '%OLARATUMAB%' AND CDF.APPROVALDATE >= DATE '2017-06-15' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-06-15')
              OR (UPPER(CDF.INTERVENTION) LIKE '%OBINUTUZUMAB%' AND CDF.APPROVALDATE >= DATE '2017-07-26' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-07-26')
              OR (UPPER(CDF.INTERVENTION) LIKE '%NIVOLUMAB%' AND CDF.APPROVALDATE >= DATE '2017-09-20' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-09-20'
             AND (SUBSTR(CDF.FORMNAME, 1, 4) = 'NIV4' OR SUBSTR(CDF.FORMNAME, 1, 4) = 'NIV5'))
             OR (UPPER(CDF.INTERVENTION) LIKE '%NIVOLUMAB%' AND CDF.APPROVALDATE >= DATE '2017-10-13'  AND SSO.START_DATE_OF_CYCLE >= DATE '2017-10-13'
            AND SUBSTR(CDF.FORMNAME, 1, 4) = 'NIV6')
             OR (UPPER(CDF.INTERVENTION) LIKE '%IBRUTINIB%' AND CDF.APPROVALDATE >= DATE '2017-09-28' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-09-28'
              AND SUBSTR(CDF.FORMNAME, 1, 4) = 'IBR4')
             OR (UPPER(CDF.INTERVENTION) LIKE '%VENETOCLAX%' AND CDF.APPROVALDATE >= DATE '2017-10-05' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-10-05')
              OR (UPPER(CDF.INTERVENTION) LIKE '%ATEZOLIZUMAB%' AND CDF.APPROVALDATE >= DATE '2017-11-01' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-11-01'
            AND SUBSTR(CDF.FORMNAME, 1, 4) = 'ATE1')
              OR (UPPER(CDF.INTERVENTION) LIKE '%IXAZOMIB%' AND CDF.APPROVALDATE >= DATE '2017-12-19' AND SSO.START_DATE_OF_CYCLE >= DATE '2017-12-19')
              OR (UPPER(CDF.INTERVENTION) LIKE '%DARATUMUMAB%' AND CDF.APPROVALDATE >= DATE '2018-01-17' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-01-17')
              OR (UPPER(CDF.INTERVENTION) LIKE '%AVELUMAB%' AND CDF.APPROVALDATE >= DATE '2018-03-01' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-03-01')
              OR (UPPER(CDF.INTERVENTION) LIKE '%PEMBROLIZUMAB%' AND CDF.APPROVALDATE >= DATE '2018-03-16' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-03-16'
              AND SUBSTR(CDF.FORMNAME, 1, 5) = 'PEMB3')
               OR (UPPER(CDF.INTERVENTION) LIKE '%PEMBROLIZUMAB%' AND CDF.APPROVALDATE >= DATE '2018-04-27' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-04-27'
            AND SUBSTR(CDF.FORMNAME, 1, 5) = 'PEMB4')
              OR (UPPER(CDF.INTERVENTION) LIKE '%CRIZOTINIB%' AND CDF.APPROVALDATE >= DATE '2018-05-31' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-05-31')
              OR (UPPER(CDF.INTERVENTION) LIKE '%NIRAPARIB%' AND CDF.APPROVALDATE >= DATE '2018-06-01' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-06-01')
             OR (UPPER(CDF.INTERVENTION) LIKE '%PEMBROLIZUMAB%'  AND CDF.APPROVALDATE >= DATE '2018-07-25' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-07-25'
             AND (SUBSTR(CDF.FORMNAME, 1, 5) = 'PEMB5' OR SUBSTR(CDF.FormName, 1, 5) = 'PEMB6'))
             OR (UPPER(CDF.INTERVENTION) LIKE '%TISAGENLECLEUCEL%' AND CDF.APPROVALDATE >= DATE '2018-11-16' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-11-16')
               OR (UPPER (CDF.INTERVENTION) = '%PEMBROLIZUMAB%' AND CDF.APPROVALDATE >= DATE '2018-11-19' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-11-19'
              AND SUBSTR(CDF.FORMNAME, 1, 5) = 'PEMB7') 
              OR (UPPER(CDF.INTERVENTION) LIKE '%PEMBROLIZUMAB%' AND CDF.APPROVALDATE >= DATE '2018-11-22'  AND SSO.START_DATE_OF_CYCLE >=  DATE '2018-11-22' AND SUBSTR(CDF.FORMNAME, 1, 5) = 'PEMB8')
              OR (UPPER(CDF.INTERVENTION) LIKE '%NIVOLUMAB%' AND CDF.APPROVALDATE >= DATE '2018-11-30' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-11-30'
              AND SUBSTR(CDF.FORMNAME, 1, 4) = 'NIV7') 
              OR (UPPER(CDF.INTERVENTION) LIKE '%AXICABTAGENE CILOLEUCEL%' AND CDF.APPROVALDATE >= DATE '2018-12-07' AND SSO.START_DATE_OF_CYCLE >= DATE '2018-12-07')
              OR(UPPER(CDF.INTERVENTION) LIKE '%ABEMACICLIB%' AND CDF.APPROVALDATE >= DATE'2019-01-19' AND SSO.START_DATE_OF_CYCLE >= DATE '2019-01-19'))
              AND 
              CDF.LATESTRECORD = 1
              AND
              CDF.NHSNUMBER NOT IN '1111111111'
              AND
              CDF.REFERENCEID NOT IN '1682933'                /* RM application error */
         AND
              CDF.REFERENCEID NOT IN '4238234'    /* Non standard route to receiving treatment */
            AND 
               ((UPPER(SSO.DRUG_NAME) LIKE '%'||UPPER(CDF.INTERVENTION)||'%')       
              OR (UPPER(DL.DRUG_GROUP) LIKE '%'||UPPER(CDF.INTERVENTION)||'%')            
               OR (UPPER(BAL.ANALYSIS) LIKE '%'||UPPER(CDF.INTERVENTION)||'%')         
             OR (UPPER(BAL.BENCHMARK) LIKE '%'||UPPER(CDF.INTERVENTION)||'%')         
             OR (UPPER(SSO.MAPPED_REGIMEN) LIKE '%'||UPPER(CDF.INTERVENTION)||'%')
         
            )) THEN 1  ELSE NULL
    END = 1) THEN 'E8'
     ELSE SSO.MAPPED_REGIMEN 
      END AS EXCLUSION

  ,SSO.DATE_OF_DEATH
    ,SSO.OUTCOME_EXPECTED

FROM SAS_SACT_OUTCOMES  SSO 
	LEFT JOIN CDF.APPLICATION_FORM@CASREF01 CDF ON CDF.NHSNUMBER = SSO.NHS_NUMBER
    LEFT JOIN ANALYSISADAMBROWN.BENCH@CAS1901 BAL ON SSO.MAPPED_REGIMEN = BAL.MAPPED_REGIMEN
    LEFT JOIN ANALYSISADAMBROWN.DRUG_LOOKUP@CAS1901 DL ON SSO.DRUG_NAME = DL.DRUG_NAME
  ;


/* **************************************** End of part two **************************************** */ 